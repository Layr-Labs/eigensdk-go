// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package elcontracts

import (
	"github.com/Layr-Labs/eigensdk-go/chainio/clients/eth"
	"github.com/Layr-Labs/eigensdk-go/chainio/txmgr"
	"github.com/Layr-Labs/eigensdk-go/logging"
	"github.com/Layr-Labs/eigensdk-go/metrics"
)

// Injectors from wire_builder.go:

func NewReaderFromConfig(cfg Config, ethClient eth.Client, logger logging.Logger) (*ChainReader, error) {
	contractBindings, err := NewBindingsFromConfig(cfg, ethClient, logger)
	if err != nil {
		return nil, err
	}
	chainReader := NewChainReaderFromBindings(contractBindings, ethClient, logger)
	return chainReader, nil
}

func NewWriterFromConfig(cfg Config, ethClient eth.Client, logger logging.Logger, eigenMetrics metrics.Metrics, txMgr txmgr.TxManager) (*ChainWriter, error) {
	contractBindings, err := NewBindingsFromConfig(cfg, ethClient, logger)
	if err != nil {
		return nil, err
	}
	chainReader := NewChainReaderFromBindings(contractBindings, ethClient, logger)
	chainWriter := NewChainWriterFromBindings(contractBindings, chainReader, ethClient, logger, eigenMetrics, txMgr)
	return chainWriter, nil
}

func buildClientsFromConfig(cfg Config, ethClient eth.Client, txMgr txmgr.TxManager, logger logging.Logger, eigenMetrics *metrics.EigenMetrics) (*ClientsAndBindings, error) {
	contractBindings, err := NewBindingsFromConfig(cfg, ethClient, logger)
	if err != nil {
		return nil, err
	}
	chainReader := NewChainReaderFromBindings(contractBindings, ethClient, logger)
	chainWriter := NewChainWriterFromBindings(contractBindings, chainReader, ethClient, logger, eigenMetrics, txMgr)
	clientsAndBindings := &ClientsAndBindings{
		ChainReader:      chainReader,
		ChainWriter:      chainWriter,
		ContractBindings: contractBindings,
	}
	return clientsAndBindings, nil
}

// wire_builder.go:

type ClientsAndBindings struct {
	ChainReader      *ChainReader
	ChainWriter      *ChainWriter
	ContractBindings *ContractBindings
}

func BuildClientsFromConfig(
	cfg Config,
	ethClient eth.Client,
	txMgr txmgr.TxManager,
	logger logging.Logger,
	eigenMetrics *metrics.EigenMetrics,
) (*ChainReader, *ChainWriter, *ContractBindings, error) {
	clientsAndBindings, err := buildClientsFromConfig(cfg, ethClient, txMgr, logger, eigenMetrics)
	if err != nil {
		return nil, nil, nil, err
	}
	return clientsAndBindings.ChainReader, clientsAndBindings.ChainWriter, clientsAndBindings.ContractBindings, nil
}
