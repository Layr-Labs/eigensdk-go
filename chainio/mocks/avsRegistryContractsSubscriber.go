// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Layr-Labs/eigensdk-go/chainio/clients/avsregistry (interfaces: AvsRegistrySubscriber)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/avsRegistryContractsSubscriber.go -package=mocks github.com/Layr-Labs/eigensdk-go/chainio/clients/avsregistry AvsRegistrySubscriber
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	contractBLSApkRegistry "github.com/Layr-Labs/eigensdk-go/contracts/bindings/BLSApkRegistry"
	event "github.com/ethereum/go-ethereum/event"
	gomock "go.uber.org/mock/gomock"
)

// MockAvsRegistrySubscriber is a mock of AvsRegistrySubscriber interface.
type MockAvsRegistrySubscriber struct {
	ctrl     *gomock.Controller
	recorder *MockAvsRegistrySubscriberMockRecorder
}

// MockAvsRegistrySubscriberMockRecorder is the mock recorder for MockAvsRegistrySubscriber.
type MockAvsRegistrySubscriberMockRecorder struct {
	mock *MockAvsRegistrySubscriber
}

// NewMockAvsRegistrySubscriber creates a new mock instance.
func NewMockAvsRegistrySubscriber(ctrl *gomock.Controller) *MockAvsRegistrySubscriber {
	mock := &MockAvsRegistrySubscriber{ctrl: ctrl}
	mock.recorder = &MockAvsRegistrySubscriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAvsRegistrySubscriber) EXPECT() *MockAvsRegistrySubscriberMockRecorder {
	return m.recorder
}

// SubscribeToNewPubkeyRegistrations mocks base method.
func (m *MockAvsRegistrySubscriber) SubscribeToNewPubkeyRegistrations() (chan *contractBLSApkRegistry.ContractBLSApkRegistryNewPubkeyRegistration, event.Subscription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeToNewPubkeyRegistrations")
	ret0, _ := ret[0].(chan *contractBLSApkRegistry.ContractBLSApkRegistryNewPubkeyRegistration)
	ret1, _ := ret[1].(event.Subscription)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// SubscribeToNewPubkeyRegistrations indicates an expected call of SubscribeToNewPubkeyRegistrations.
func (mr *MockAvsRegistrySubscriberMockRecorder) SubscribeToNewPubkeyRegistrations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeToNewPubkeyRegistrations", reflect.TypeOf((*MockAvsRegistrySubscriber)(nil).SubscribeToNewPubkeyRegistrations))
}
